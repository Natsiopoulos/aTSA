{
    "contents" : "#' Simple Expoential Smoothing\n#' @description Peforms a simple exponential smoothing for univariate time series\n#' with no trend or seasonal pattern.\n#' @param x a numeric vector or univariate time series.\n#' @param trend the type of trend. See details.\n#' @param alpha the smoothing parameter for constant component. The default is \\code{0.2}.\n#' @param beta the smoothing parameter for linear component. The default is \\code{0.10557}.\n#' @param gamma the smoothing parameter for quadratic component. The default is \\code{0.07168}.\n#' @param lead the number of steps ahead for which prediction is required. \n#' The default is \\code{0}.\n#' @param plot a logical value indicating to print the plot of original data v.s smoothed \n#' data. The default is \\code{TRUE}.\n#' @details Simple exponential smoothing is a weighted average between the most recent \n#' observation and the most recent forecasting, with weights \\eqn{\\alpha} and \n#' \\eqn{1 - \\alpha}. To be precise, the smoothing equation of single exponential \n#' smoothing (constant model, \\code{trend = 1}) is given by \n#' \\deqn{level[t] = \\alpha *x[t] + (1 - \\alpha)*level[t-1],}\n#' and the forecasting equation is \n#' \\deqn{hat{x}[t+1|t] = level[t],}\n#' for \\eqn{t = 1,...,n}.\n#' The initial value \\eqn{level[0] = x[1]}. For example, \\eqn{hat{x}[1|0] = level[0]},\n#' \\eqn{hat{x}[2|1] = level[1]},..., etc. \n#' \n#' Let \\eqn{x1[t]} be the smoothed values of single exponential smoothing. The double\n#' exponential smoothing (\\code{trend = 2}, a linear model) is to apply a single \n#' exponential smoothing again to the smoothed sequence \\eqn{x1[t]}, with a new smoothing \n#' parameter \\code{beta}. Similarly, we denote the smoothed values of double \n#' exponential smoothing to be \\eqn{x2[t]}. The triple exponential smoothing \n#' (\\code{trend = 3}, a quadratic model) is to apply the single exponential smoothing\n#' to the smoothed sequence \\eqn{x2[t]} with a new smoothing parameter \\code{gamma}. The \n#' default smoothing parameters (weights) \\code{alpha}, \\code{beta}, \\code{gamma} are \n#' taken from the equation \\code{1 - 0.8^{1/trend}} respectively, which is similar \n#' to the FORECAST procedure in SAS.  \n#' \n#' @note Missing values are removed before the analysis.\n#' \n#' @return A list containing the following components:\n#' \\item{x.hat}{the smoothed values.}\n#' \\item{x.pred}{the predicted values when \\code{lead} > 0.}\n#' \\item{accurate}{the accurate measurements.}\n#' @author Debin Qiu\n#' @examples x <- rnorm(100)\n#' es <- expsmooth(x) # trend = 1: a constant model\n#' plot(x,type = \"l\")\n#' lines(es$x.hat,col = 2)\n#' expsmooth(x,trend = 2) # trend = 2: a linear model\n#' expsmooth(x,trend = 3) # trend = 3: a quadratic model\n#' @export\nexpsmooth <- function(x,trend = 1,alpha = 0.2,beta = 0.10557,\n                        gamma = 0.07168,lead = 0,plot = TRUE)\n{\n  if (NCOL(x) > 1L)\n    stop(\"'x' must be an univariate time series\")\n  if (any(c(alpha,beta,gamma) > 1) || any(c(alpha,beta,gamma) < 0))\n    stop(\"'alpha' or 'beta' or 'gamma' must be between 0 and 1\")\n  if (is.ts(x))\n    x <- ts(x[is.finite(x)],start = time(x)[1],frequency = frequency(x))\n  else\n    x <- x[is.finite(x)]\n  if (length(x) < 1L)\n    stop(\"'x' must have at least one observation\")\n  single.expo <- function(x,parameter) {\n    m <- length(x)\n    x.hat <- c(x[1],numeric(m - 1))\n    for (i in 2:m)  \n      x.hat[i] <- parameter*x[i-1] + (1 - parameter)*x.hat[i - 1]\n    return(x.hat)\n  }\n  if (trend == 1) \n    x.hat <- single.expo(x,alpha)\n  else if (trend == 2) \n    x.hat <- single.expo(single.expo(x,alpha),beta)\n  else if (trend == 3) \n    x.hat <- single.expo(single.expo(single.expo(x,alpha),beta),gamma)\n  else stop(\"'trend' must be one of 1,2,3\")\n  if (is.ts(x))\n    x.hat <- ts(x.hat,start = time(x),frequency = frequency(x))\n  result <- list(estimate = x.hat)\n  if (lead > 0) {\n    if (!is.wholenumber(lead))\n      stop(\"'lead' must be a positive number\")\n    result <- c(result,list(pred = rep(x.hat[n],lead)))\n  }\n  if (plot) {\n    plot(x,main = \"original v.s smoothed data\",type = \"l\")\n    lines(x.hat,col = 2)\n  }\n  result <- c(result,list(accurate = accurate(x,x.hat,trend,output = FALSE)))\n  return(result)\n}",
    "created" : 1430071211026.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1746638275",
    "id" : "B9BBEF9D",
    "lastKnownWriteTime" : 1430071256,
    "path" : "~/Desktop/R Package/aTSA/R/exposmooth.R",
    "project_path" : "exposmooth.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}